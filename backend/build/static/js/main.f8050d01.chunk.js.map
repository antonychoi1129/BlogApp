{"version":3,"sources":["components/Blogs.js","services/user.js","services/blogs.js","reducers/notification.js","reducers/blogs.js","hooks.js","components/index.js","components/Blog.js","services/login.js","reducers/user.js","components/LoginForm.js","components/NewBlogForm.js","components/Notification.js","components/Togglable.js","components/Users.js","components/User.js","services/users.js","reducers/users.js","App.js","store.js","index.js"],"names":["Blogs","blogs","useSelector","state","id","map","blog","to","title","author","token","STORAGE_KEY","user","window","localStorage","setItem","JSON","stringify","loggedUserJSON","getItem","parse","clear","baseUrl","config","headers","Authorization","userService","create","newObject","a","axios","post","response","data","getAll","get","then","update","put","remove","delete","slice","createSlice","name","initialState","reducers","notifyWith","payload","setNotification","notification","dispatch","setTimeout","actions","byLikes","b1","b2","likes","initializeWith","sort","addNew","concat","removeOne","filter","b","reactToBlog","what","blogService","updatedBlog","message","type","useField","useState","value","setValue","reset","fields","onChange","event","target","Button","styled","button","NavButton","Input","input","Page","div","Navigation","Footer","Info","props","alert","Blog","useParams","find","u","useDispatch","navigate","useNavigate","comment","own","username","addedBy","onLike","liked","href","url","onClick","confirm","removeBlog","console","log","commented","comments","c","i","login","credentials","loginUser","logoutUser","LoginForm","password","notify","onSubmit","preventDefault","loginService","catch","NewBlogForm","togglableRef","setTitle","setAuthor","setUrl","current","toggleVisibility","error","placeholder","Notification","Togglable","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","useImperativeHandle","style","buttonLabel","children","displayName","Users","users","length","User","App","blogFormRef","useRef","useEffect","userFromStorage","padding","paddingLeft","paddingRight","path","element","store","configureStore","reducer","notificationReducer","blogReducer","userReducer","usersReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8050d01.chunk.js","sourcesContent":["import { useSelector } from 'react-redux'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Blogs = () => {\r\n  const blogs = useSelector((state) => state.blogs)\r\n\r\n  return (\r\n    <div>\r\n      <h2>blogs</h2>\r\n      <div id=\"blogs\">\r\n        {blogs.map((blog) => (\r\n          <div key={blog.id}>\r\n            <Link to={`/blogs/${blog.id}`}>\r\n              {blog.title} by {blog.author}\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blogs","let token = null\r\n\r\nconst STORAGE_KEY = 'loggedBlogAppUser'\r\n\r\nconst setUser = (user) => {\r\n  window.localStorage.setItem(STORAGE_KEY, JSON.stringify(user))\r\n  token = user.token\r\n}\r\n\r\nconst getUser = () => {\r\n  const loggedUserJSON = window.localStorage.getItem(STORAGE_KEY)\r\n  if (loggedUserJSON) {\r\n    const user = JSON.parse(loggedUserJSON)\r\n    token = user.token\r\n    return user\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst clearUser = () => {\r\n  localStorage.clear()\r\n  token = null\r\n}\r\n\r\nconst getToken = () => token\r\n\r\nexport default {\r\n  setUser,\r\n  getUser,\r\n  clearUser,\r\n  getToken,\r\n}","import axios from 'axios'\r\nimport userService from './user'\r\n\r\nconst baseUrl = '/api/blogs'\r\n\r\nconst config = () => {\r\n  return {\r\n    headers: {\r\n      Authorization: `bearer ${userService.getToken()}`,\r\n    },\r\n  }\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst create = async (newObject) => {\r\n  const response = await axios.post(baseUrl, newObject, config())\r\n  return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`, config())\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst slice = createSlice({\r\n  name: 'notification',\r\n  initialState: null,\r\n  reducers: {\r\n    notifyWith(state, { payload }) {\r\n      return payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const setNotification = (notification) => {\r\n  return async (dispatch) => {\r\n    dispatch(notifyWith(notification))\r\n    setTimeout(() => {\r\n      dispatch(notifyWith(null))\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst { notifyWith } = slice.actions\r\nexport default slice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\nimport blogService from '../services/blogs'\r\nimport { setNotification } from './notification'\r\n\r\nconst byLikes = (b1, b2) => (b2.likes > b1.likes ? 1 : -1)\r\n\r\nconst slice = createSlice({\r\n  name: 'blog',\r\n  initialState: [],\r\n  reducers: {\r\n    initializeWith(state, { payload }) {\r\n      return payload.sort(byLikes)\r\n    },\r\n    addNew(state, { payload }) {\r\n      return state.concat(payload).sort(byLikes)\r\n    },\r\n    removeOne(state, { payload }) {\r\n      return state.filter((b) => b.id !== payload).sort(byLikes)\r\n    },\r\n    update(state, { payload }) {\r\n      return state.map((b) => (b.id === payload.id ? payload : b)).sort(byLikes)\r\n    },\r\n  },\r\n})\r\n\r\nexport const initializeBlogs = () => {\r\n  return async (dispatch) => {\r\n    blogService.getAll().then((response) => {\r\n      dispatch(initializeWith(response))\r\n    })\r\n  }\r\n}\r\n\r\nexport const removeBlog = (id) => {\r\n  return async (dispatch) => {\r\n    blogService.remove(id).then(() => {\r\n      dispatch(removeOne(id))\r\n    })\r\n  }\r\n}\r\n\r\nexport const reactToBlog = (blog, what) => {\r\n  return async (dispatch) => {\r\n    blogService.update(blog.id, blog).then((updatedBlog) => {\r\n      dispatch(update(updatedBlog))\r\n      dispatch(\r\n        setNotification({\r\n          message: `you ${what} '${blog.title}' by ${blog.author}`,\r\n          type: 'info',\r\n        })\r\n      )\r\n    })\r\n  }\r\n}\r\n\r\nexport const createBlog = (blog) => {\r\n  return async (dispatch) => {\r\n    blogService\r\n      .create(blog)\r\n      .then((response) => {\r\n        dispatch(addNew(response))\r\n        dispatch(\r\n          setNotification({\r\n            message: `a new blog '${blog.title}' by ${blog.author} added`,\r\n            type: 'info',\r\n          })\r\n        )\r\n      })\r\n      .catch((error) => {\r\n        dispatch(\r\n          setNotification({\r\n            message: 'creating a blog failed: ' + error.response.data.error,\r\n            type: 'alert',\r\n          })\r\n        )\r\n      })\r\n  }\r\n}\r\n\r\nconst { initializeWith, addNew, removeOne, update } = slice.actions\r\nexport default slice.reducer","import { useState } from 'react'\r\n\r\nexport const useField = (type) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const reset = () => {\r\n    setValue('')\r\n  }\r\n\r\n  return {\r\n    reset,\r\n    fields: {\r\n      type,\r\n      value,\r\n      onChange,\r\n    },\r\n  }\r\n}","import styled from 'styled-components'\r\n\r\nexport const Button = styled.button`\r\n  background: Bisque;\r\n  font-size: 1em;\r\n  margin-top: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid Chocolate;\r\n  border-radius: 3px;\r\n`\r\n\r\nexport const NavButton = styled.button`\r\n  background: Bisque;\r\n  font-size: 1em;\r\n  border: 1px solid Chocolate;\r\n  border-radius: 3px;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  margin: 0.25em;\r\n`\r\n\r\nexport const Page = styled.div`\r\n  padding: 1em;\r\n  background: papayawhip;\r\n`\r\n\r\nexport const Navigation = styled.div`\r\n  background: BurlyWood;\r\n  padding: 1em;\r\n`\r\n\r\nexport const Footer = styled.div`\r\n  background: Chocolate;\r\n  padding: 1em;\r\n  margin-top: 2em;\r\n`\r\n\r\nexport const Info = styled.div`\r\n  color: ${(props) => (props.alert ? 'red' : 'green')};\r\n  background: white;\r\n  font-size: 20px;\r\n  border-style: solid;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n`","import { useDispatch, useSelector } from 'react-redux'\r\nimport { removeBlog, reactToBlog } from '../reducers/blogs'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\n\r\nimport { useField } from '../hooks'\r\n\r\nimport { Button } from '.'\r\n\r\nconst Blog = () => {\r\n  const { id } = useParams()\r\n  const blog = useSelector((state) => state.blogs.find((u) => u.id === id))\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const comment = useField('text')\r\n\r\n  const user = useSelector((state) => state.user)\r\n\r\n  if (!blog) {\r\n    return null\r\n  }\r\n\r\n  const own = user && blog.user && user.username === blog.user.username\r\n\r\n  const addedBy = blog.user && blog.user.name ? blog.user.name : 'anonymous'\r\n\r\n  const onRemoveBlog = () => {\r\n    const ok = window.confirm(`remove '${blog.title}' by ${blog.author}?`)\r\n\r\n    if (!ok) {\r\n      return\r\n    }\r\n\r\n    dispatch(removeBlog(blog.id))\r\n    navigate('/')\r\n  }\r\n\r\n  const onLike = async () => {\r\n    const liked = {\r\n      ...blog,\r\n      likes: (blog.likes || 0) + 1,\r\n      user: blog.user.id,\r\n    }\r\n    dispatch(reactToBlog(liked, 'liked'))\r\n  }\r\n\r\n  const onAddComment = () => {\r\n    console.log(comment.fields.value)\r\n    const commented = {\r\n      ...blog,\r\n      comments: blog.comments.concat(comment.fields.value),\r\n      user: blog.user.id,\r\n    }\r\n    dispatch(reactToBlog(commented, 'commented'))\r\n    comment.reset()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        {blog.title} {blog.author}\r\n      </h2>\r\n      <div>\r\n        <a href={blog.url}>{blog.url}</a>\r\n      </div>\r\n      <div>\r\n        {blog.likes} likes <Button onClick={onLike}>like</Button>\r\n      </div>\r\n      <div>added by {addedBy}</div>\r\n      {own && <Button onClick={onRemoveBlog}>remove</Button>}\r\n\r\n      <h3>comments</h3>\r\n\r\n      <div>\r\n        <input {...comment.fields} />{' '}\r\n        <Button onClick={onAddComment}> add comment</Button>\r\n      </div>\r\n\r\n      <ul>\r\n        {blog.comments.map((c, i) => (\r\n          <li key={i}>{c}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  login,\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst slice = createSlice({\r\n  name: 'user',\r\n  initialState: null,\r\n  reducers: {\r\n    loginUser(state, { payload }) {\r\n      return payload\r\n    },\r\n    // eslint-disable-next-line no-unused-vars\r\n    logoutUser(state, { payload }) {\r\n      return null\r\n    },\r\n  },\r\n})\r\n\r\nexport const { loginUser, logoutUser } = slice.actions\r\nexport default slice.reducer","import { useDispatch } from 'react-redux'\r\nimport loginService from '../services/login'\r\nimport userService from '../services/user'\r\nimport { loginUser } from '../reducers/user'\r\nimport { useField } from '../hooks'\r\n\r\nimport { setNotification } from '../reducers/notification'\r\n\r\nimport { Button, Input } from '.'\r\n\r\nconst LoginForm = () => {\r\n  const username = useField('text')\r\n  const password = useField('password')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const notify = (message, type = 'info') => {\r\n    dispatch(setNotification({ message, type }))\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    loginService\r\n      .login({\r\n        username: username.fields.value,\r\n        password: password.fields.value,\r\n      })\r\n      .then((user) => {\r\n        userService.setUser(user)\r\n\r\n        dispatch(loginUser(user))\r\n        notify(`${user.name} logged in!`)\r\n      })\r\n      .catch(() => {\r\n        notify('wrong username/password', 'alert')\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Log in to application</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          username\r\n          <Input {...username.fields} />\r\n        </div>\r\n        <div>\r\n          password\r\n          <Input {...password.fields} />\r\n        </div>\r\n        <Button id=\"login-button\" type=\"submit\">\r\n          login\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createBlog } from '../reducers/blogs'\r\n\r\nconst NewBlogForm = ({ togglableRef }) => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    togglableRef.current.toggleVisibility()\r\n    dispatch(createBlog({ title, author, url, likes: 0 }))\r\n    setAuthor('')\r\n    setTitle('')\r\n    setUrl('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create new</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          title\r\n          <input\r\n            value={title}\r\n            onChange={({ target }) => setTitle(target.value)}\r\n            id=\"title\"\r\n            placeholder=\"title of the blog\"\r\n          />\r\n        </div>\r\n        <div>\r\n          author\r\n          <input\r\n            value={author}\r\n            onChange={({ target }) => setAuthor(target.value)}\r\n            id=\"author\"\r\n            placeholder=\"author of the blog\"\r\n          />\r\n        </div>\r\n        <div>\r\n          url\r\n          <input\r\n            value={url}\r\n            onChange={({ target }) => setUrl(target.value)}\r\n            id=\"url\"\r\n            placeholder=\"url of the blog\"\r\n          />\r\n        </div>\r\n        <button id=\"create-butto\" type=\"submit\">\r\n          create\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewBlogForm","import { useSelector } from 'react-redux'\r\n\r\nimport { Info } from '.'\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector(({ notification }) => notification)\r\n\r\n  if (notification === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Info alert={notification.type === 'alert'}>{notification.message}</Info>\r\n  )\r\n}\r\n\r\nexport default Notification","import { useState, useImperativeHandle, forwardRef } from 'react'\r\n\r\nimport { Button } from '.'\r\n\r\nconst Togglable = forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility,\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button onClick={toggleVisibility}>{props.buttonLabel}</Button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <Button onClick={toggleVisibility}>cancel</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable","import { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Users = () => {\r\n  const users = useSelector((state) => state.users)\r\n\r\n  return (\r\n    <div>\r\n      <h2>Users</h2>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td></td>\r\n            <td>\r\n              <strong>blogs created</strong>\r\n            </td>\r\n          </tr>\r\n          {users.map((u) => (\r\n            <tr key={u.username}>\r\n              <td>\r\n                <Link to={`/users/${u.id}`}>{u.name}</Link>\r\n              </td>\r\n              <td>{u.blogs.length}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users","import { useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst User = () => {\r\n  const { id } = useParams()\r\n\r\n  const user = useSelector((state) => state.users.find((u) => u.id === id))\r\n\r\n  if (!user) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{user.name}</h2>\r\n\r\n      <h3>added blogs</h3>\r\n\r\n      <ul>\r\n        {user.blogs.map((b) => (\r\n          <li key={b.id}>{b.title}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nexport default { getAll }","import { createSlice } from '@reduxjs/toolkit'\r\nimport userService from '../services/users'\r\n\r\nconst slice = createSlice({\r\n  name: 'users',\r\n  initialState: [],\r\n  reducers: {\r\n    initializeWith(state, { payload }) {\r\n      return payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const initializeUsers = () => {\r\n  return async (dispatch) => {\r\n    userService.getAll().then((response) => {\r\n      dispatch(initializeWith(response))\r\n    })\r\n  }\r\n}\r\n\r\nconst { initializeWith } = slice.actions\r\nexport default slice.reducer","import { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Routes, Route, Link } from 'react-router-dom'\r\n\r\nimport Blogs from './components/Blogs'\r\nimport Blog from './components/Blog'\r\nimport LoginForm from './components/LoginForm'\r\nimport NewBlogForm from './components/NewBlogForm'\r\nimport Notification from './components/Notification'\r\nimport Togglable from './components/Togglable'\r\nimport Users from './components/Users'\r\nimport User from './components/User'\r\n\r\nimport { Navigation, Page, NavButton, Footer } from './components'\r\n\r\nimport userService from './services/user'\r\n\r\nimport { setNotification } from './reducers/notification'\r\nimport { initializeBlogs } from './reducers/blogs'\r\nimport { initializeUsers } from './reducers/users'\r\nimport { logoutUser, loginUser } from './reducers/user'\r\n\r\nconst App = () => {\r\n  const blogFormRef = useRef()\r\n\r\n  const dispatch = useDispatch()\r\n  const user = useSelector((state) => state.user)\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs())\r\n    dispatch(initializeUsers())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const userFromStorage = userService.getUser()\r\n    if (userFromStorage) {\r\n      dispatch(loginUser(userFromStorage))\r\n    }\r\n  }, [])\r\n\r\n  const logout = () => {\r\n    userService.clearUser()\r\n    dispatch(logoutUser())\r\n    dispatch(setNotification({ message: 'good bye!', type: 'info' }))\r\n  }\r\n\r\n  if (user === null) {\r\n    return (\r\n      <Page>\r\n        <Notification />\r\n        <LoginForm />\r\n      </Page>\r\n    )\r\n  }\r\n\r\n  const padding = {\r\n    padding: 5,\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <Navigation>\r\n        <Link style={padding} to=\"/\">\r\n          blogs\r\n        </Link>\r\n        <Link style={padding} to=\"/users\">\r\n          users\r\n        </Link>\r\n        <span style={{ paddingLeft: 5, paddingRight: 5 }}>\r\n          {user.name} logged in\r\n        </span>\r\n        <NavButton onClick={logout}>logout</NavButton>\r\n      </Navigation>\r\n\r\n      <Notification />\r\n\r\n      <Togglable buttonLabel=\"create new blog\" ref={blogFormRef}>\r\n        <NewBlogForm togglableRef={blogFormRef} />\r\n      </Togglable>\r\n\r\n      <Routes>\r\n        <Route path=\"/\" element={<Blogs />} />\r\n      </Routes>\r\n      <Routes>\r\n        <Route path=\"/blogs/:id\" element={<Blog />} />\r\n      </Routes>\r\n      <Routes>\r\n        <Route path=\"/users\" element={<Users />} />\r\n      </Routes>\r\n      <Routes>\r\n        <Route path=\"/users/:id\" element={<User />} />\r\n      </Routes>\r\n\r\n      <Footer>Full stack open</Footer>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default App","import { configureStore } from '@reduxjs/toolkit'\r\nimport notificationReducer from './reducers/notification'\r\nimport blogReducer from './reducers/blogs'\r\nimport userReducer from './reducers/user'\r\nimport usersReducer from './reducers/users'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    notification: notificationReducer,\r\n    blogs: blogReducer,\r\n    user: userReducer,\r\n    users: usersReducer,\r\n  },\r\n})\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport App from './App'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}